PROGS = ows crawl/crawl grpc_server/grpc_server grpc_server/gdal_process

prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
sbindir = @sbindir@
libexecdir = @libexecdir@
sysconfdir = @sysconfdir@
srcdir = @srcdir@
VPATH = @srcdir@

CGO_CFLAGS="@CGO_CFLAGS@"
LDFLAGS="-X=_$(srcdir)/utils.LibexecDir=${libexecdir} -X=_$(srcdir)/grpc_server/gdalservice.LibexecDir=${libexecdir} \
	-X=_$(srcdir)/utils.EtcDir=$(sysconfdir) -X=_$(srcdir)/utils.DataDir=${datarootdir}/gsky"

all: $(PROGS)

# Implicit rule for .go source files.
% :: %.go
	go build -ldflags=$(LDFLAGS) -o $@ $<

# Override rule for gdal_process.go to pass cgo flags.
grpc_server/gdal_process :: grpc_server/gdal_process.go
	CGO_FLAGS=$(CGO_CFLAGS) go build -ldflags=$(LDFLAGS) -o $@ $<

get:
	go get bitbucket.org/monkeyforecaster/geometry
	go get github.com/golang/protobuf/proto
	go get google.golang.org/grpc
	go get golang.org/x/crypto/ssh/terminal

format:
	find . -name '*.go' | xargs gofmt -w

# Note: install(1) can't deal with directories as source, so use cp -r.
install:
	install -d $(sbindir) $(libexecdir) $(sysconfdir)
	install ows $(sbindir)/gsky-ows
	install grpc_server/gdal_process $(libexecdir)/gsky-gdal-process
	install grpc_server/grpc_server $(sbindir)/gsky-rpc
	install crawl/crawl $(sbindir)/gsky-crawl
	install -m 644 $(srcdir)/zoom.png $(sysconfdir)
	install -m 644 $(srcdir)/data_unavailable.png $(sysconfdir)
	install -d $(datarootdir)/gsky/templates
	install -d $(datarootdir)/gsky/static
	for f in $(srcdir)/templates/* ; do install -m 644 $$f $(datarootdir)/gsky/templates; done
	cp -rp $(srcdir)/static/* $(datarootdir)/gsky/static

clean:
	-rm -f $(PROGS)
